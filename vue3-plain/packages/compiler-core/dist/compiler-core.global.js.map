{
  "version": 3,
  "sources": ["../src/index.ts", "../src/runtimeHelpers.ts", "../src/ast.ts", "../src/generate.ts", "../src/parse.ts", "../src/transforms/transformElement.ts", "../src/transforms/transformExpression.ts", "../../shared/src/index.ts", "../src/transforms/transformText.ts", "../src/transform.ts"],
  "sourcesContent": ["import { generate } from \"./generate\";\r\nimport { parse } from \"./parse\";\r\nimport { transform } from \"./transform\";\r\n\r\nexport function compile(template) {\r\n\r\n  // \u5C06\u6A21\u677F\u8F6C\u6210\u62BD\u8C61\u8BED\u6CD5\u6811 \u7F16\u8BD1\u539F\u7406\r\n  const ast = parse(template)\r\n\r\n  // \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u9884\u5904\u7406, \u751F\u6210\u4E00\u4E9B\u4FE1\u606F\r\n  transform(ast)\r\n  \r\n  // \u4EE3\u7801\u751F\u6210\r\n  return generate(ast)\r\n}", "export const TO_DISPLAY_STRING = Symbol('toDisplayString') // Symbol\u91CC\u7684\u5B57\u7B26\u4E32\u610F\u4E49\u4E0D\u5927, \u53EA\u662F\u6807\u8BC6\r\nexport const CREATE_TEXT = Symbol('createTextVNode')\r\nexport const CREATE_ELEMENT_VNODE = Symbol('createElementVnode')\r\nexport const OPEN_BLOCK = Symbol('openBlock')\r\nexport const CREATE_ELEMENT_BLOCK = Symbol('createElementBlock')\r\nexport const FRAGMENT = Symbol('fragment')\r\n\r\nexport const helperMap = {\r\n  [TO_DISPLAY_STRING]: 'toDisplayString',\r\n  [CREATE_TEXT]: 'createTextVNode',\r\n  [CREATE_ELEMENT_VNODE]: 'createElementVnode',\r\n  [OPEN_BLOCK]: 'openBlock',\r\n  [CREATE_ELEMENT_BLOCK]: 'createElementBlock',\r\n  [FRAGMENT]: 'fragment',\r\n}", "import { CREATE_ELEMENT_VNODE, CREATE_TEXT } from \"./runtimeHelpers\";\r\n\r\nexport const enum NodeTypes {\r\n  ROOT, // \u6839\u8282\u70B9\r\n  ELEMENT, // \u5143\u7D20\r\n  TEXT, // \u6587\u672C\r\n  COMMENT, // \u6CE8\u91CA\r\n  SIMPLE_EXPRESSION, // \u7B80\u5355\u8868\u8FBE\u5F0F :a='aa'\r\n  INTERPOLATION, // \u6A21\u677F\u8868\u8FBE\u5F0F {{ aaa }}\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  COMPOUND_EXPRESSION, // \u590D\u5408\u8868\u8FBE\u5F0F {{ aaa }} abc\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL, // \u6587\u672C\u8C03\u7528\r\n  VNODE_CALL, // \u5143\u7D20\u8C03\u7528\r\n  JS_CALL_EXPRESSION, // js\u8C03\u7528\u8868\u8FBE\u5F0F\r\n  JS_OBJECT_EXPRESSION,\r\n}\r\n\r\nexport function createCallExpression(context, args) {\r\n  const callee = context.helper(CREATE_TEXT)\r\n  return {\r\n    callee,\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    arguments: args\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(properties) {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    properties\r\n  }\r\n}\r\n\r\nexport function createVnodeCall(context, vnodeTag, propsExpression, childrenNode) {\r\n  context.helper(CREATE_ELEMENT_VNODE)\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag: vnodeTag,\r\n    props: propsExpression,\r\n    children: childrenNode\r\n  }\r\n}", "import { NodeTypes } from \"./ast\"\r\nimport { helperMap, TO_DISPLAY_STRING } from \"./runtimeHelpers\"\r\n\r\n\r\n\r\nfunction createCodegenContext(ast) {\r\n  const context = {\r\n    code: '',\r\n    helper(name) {\r\n      return `${helperMap[name]}`\r\n    },\r\n    push(code) {\r\n      context.code += code\r\n    },\r\n    indentLevel: 0,\r\n    indent() { // \u5411\u540E\u7F29\u8FDB\r\n      ++context.indentLevel\r\n      context.newLine()\r\n    },\r\n    deindent(withoutNewLine = false) { // \u5411\u524D\u7F29\u8FDB\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        --context.indentLevel\r\n        context.newLine()\r\n      }\r\n    },\r\n    newLine() { // \u6839\u636EindentLevel\u751F\u6210\u65B0\u7684\u884C\r\n      newLine(context.indentLevel)\r\n    }\r\n  }\r\n\r\n  function newLine(n) {\r\n    context.push('\\n' + '  '.repeat(n))\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nfunction genFunctionPreable(ast, context) {\r\n  if (ast.helpers.length > 0) {\r\n    const importFn = `${ast.helpers.map(h => `${context.helper(h)} as _${context.helper(h)}`).join(',')}`\r\n    context.push(`import { ${importFn} } from \"vue\" `)\r\n    context.newLine()\r\n  }\r\n  \r\n  context.push(`export `)\r\n}\r\n\r\nfunction genText(node, context) {\r\n  context.push(JSON.stringify(node.content))\r\n}\r\n\r\nfunction genInterpolation(node, context) {\r\n  context.push(`${helperMap[TO_DISPLAY_STRING]}(`)\r\n  genNode(node.content, context)\r\n  context.push(')')\r\n}\r\n\r\nfunction genExpression(node, context) {\r\n  context.push(node.content)\r\n}\r\n\r\nfunction genNode(node, context) {\r\n  switch (node.type) {\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break;\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function generate(ast) {\r\n  const context = createCodegenContext(ast)\r\n  \r\n  const { push, indent, deindent, } = context\r\n\r\n  genFunctionPreable(ast, context)\r\n  \r\n  const functionName = 'render'\r\n\r\n  const args = ['_ctx', '_cache', '$props']\r\n  \r\n  push(`function ${functionName}(${args.join(',')}) {`)\r\n  indent()\r\n  push(`return `)\r\n\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push('null')\r\n  }\r\n\r\n  deindent()\r\n  push('}')\r\n\r\n\r\n\r\n  console.log(context.code);\r\n  \r\n\r\n}", "import { NodeTypes } from \"./ast\"\r\n\r\nfunction createParserContext(template) {\r\n  return {\r\n    line: 1,\r\n    column: 1,\r\n    offset: 0,\r\n    source: template, // \u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u89E3\u6790 slice\r\n    originalSource: template\r\n  }\r\n}\r\n\r\nfunction isEnd(context) {\r\n  const source = context.source\r\n  if (source.startsWith('</')) {\r\n    return true\r\n  }\r\n  return !source // source\u4E3A\u7A7A\u4E32\u65F6\u8868\u793A\u89E3\u6790\u5B8C\u6BD5\r\n}\r\n\r\nfunction getCursor(context){\r\n  const { line, column, offset } = context\r\n  return { line, column, offset }\r\n}\r\n\r\nfunction advancePositionWithMutation(context, source, endIndex) {\r\n  let linesCount = 0\r\n  let linePos = -1 // \u6362\u884C\u7B26\u7684\u4F4D\u7F6E\r\n  for (let i = 0; i < endIndex; i++) {\r\n    if (source.charCodeAt(i) === 10) {\r\n      linesCount++\r\n      linePos = i\r\n    }\r\n  }\r\n  \r\n  context.line += linesCount\r\n  context.offset += endIndex\r\n  context.column = linePos === -1 ? context.column + endIndex : endIndex - linePos\r\n}\r\n\r\nfunction advanceBy(context, endIndex) {\r\n  // \u6BCF\u6B21\u5220\u9664\u90FD\u8981\u66F4\u65B0\u884C\u3001\u5217\u3001\u504F\u79FB\u91CF\u4FE1\u606F\r\n  const source = context.source\r\n  advancePositionWithMutation(context, source, endIndex)\r\n\r\n  context.source = source.slice(endIndex)\r\n}\r\n\r\nfunction parseTextData(context, endIndex) {\r\n  const rawText = context.source.slice(0, endIndex)\r\n  advanceBy(context, endIndex)\r\n  return rawText\r\n}\r\n\r\nfunction getSelection(context, start, end?) {\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset)\r\n  }\r\n}\r\n\r\nfunction parseText(context) {\r\n  const endTokens = ['<', '{{']\r\n  let endIndex = context.source.length // \u9ED8\u8BA4\u5230\u6700\u540E\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    const index = context.source.indexOf(endTokens[i], 1)\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index\r\n    }\r\n  }\r\n  \r\n  // \u521B\u5EFA\u884C\u5217\u4FE1\u606F\r\n  const start = getCursor(context)\r\n  // \u53D6\u5185\u5BB9\r\n  const content = parseTextData(context, endIndex)\r\n  // \u83B7\u53D6\u7ED3\u675F\u4F4D\u7F6E\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseInterpolation(context) {\r\n  const start = getCursor(context)\r\n  // const closeIndex = context.source.indexOf('}}', '{{') // \u7ED3\u675F\u5927\u62EC\u53F7\r\n  const closeIndex = context.source.indexOf('}}', 2) // \u7ED3\u675F\u5927\u62EC\u53F7\r\n  advanceBy(context, 2) // \u7A7A\u683C\u7A7A\u683Cxxx\u7A7A\u683C\u7A7A\u683C}}\r\n  const innerStart = getCursor(context)\r\n  const innerEnd = getCursor(context)\r\n  const rawContentLength = closeIndex - 2 // \u539F\u59CB\u5185\u5BB9\u957F\u5EA6\r\n  const preContent = parseTextData(context, rawContentLength)//\u6587\u672C\u5185\u5BB9,\u5E26\u7A7A\u683C: \u7A7A\u683C\u7A7A\u683Cxxx\u7A7A\u683C\u7A7A\u683C\r\n  const content = preContent.trim() // xxx\r\n  const startOffset = preContent.indexOf(content)\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, preContent, startOffset)\r\n  }\r\n  const endOffset = startOffset + content.length\r\n  advancePositionWithMutation(innerEnd, preContent, endOffset)\r\n  advanceBy(context, 2)\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd)\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction advanceBySpaces(context) {\r\n  const match = /^[ \\t\\r\\n]+/.exec(context.source)\r\n  if (match) {\r\n    advanceBy(context, match[0].length)\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context) {\r\n  const start = getCursor(context)\r\n  const quote = context.source[0]\r\n  let content;\r\n  if (quote === '\"' || quote === \"'\") {\r\n    advanceBy(context, 1)\r\n    const endIndex = context.source.indexOf(quote)\r\n    content = parseTextData(context, endIndex)\r\n    advanceBy(context, 1)\r\n  }\r\n  return {\r\n    content,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseAttribute(context) {\r\n  const start = getCursor(context)\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)\r\n  const name = match[0] // \u5C5E\u6027\u540D\r\n  advanceBy(context, name.length)\r\n  advanceBySpaces(context)\r\n  advanceBy(context, 1) // \u53BB\u6389=\r\n  const value = parseAttributeValue(context)\r\n\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: {\r\n      type: NodeTypes.TEXT,\r\n      ...value\r\n    },\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseAttributes(context) {\r\n  const props = []\r\n\r\n  while(context.source.length > 0 && !context.source.startsWith('>')) {\r\n    const prop = parseAttribute(context)\r\n    props.push(prop)\r\n    advanceBySpaces(context)\r\n  }\r\n  return props\r\n}\r\n\r\nfunction parseTag(context) {\r\n  const start = getCursor(context) // <div    name=11>banana</div>\r\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source)\r\n  const tag = match[1] // div\r\n  advanceBy(context, match[0].length) // match[0]: <div\r\n  advanceBySpaces(context) // name=11>banana</div>\r\n\r\n  const props = parseAttributes(context)\r\n\r\n  const isSelfClosing = context.source.startsWith('/>')\r\n  advanceBy(context, isSelfClosing ? 2 : 1)\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    tag,\r\n    isSelfClosing,\r\n    children: [],\r\n    props,\r\n    loc: getSelection(context, start)\r\n  }\r\n}\r\n\r\nfunction parseElement(context) {\r\n  const ele = parseTag(context) // <div></div>, \u8FD9\u79CD\u60C5\u51B5\u7684<div>\r\n  // \u513F\u5B50, \u53EF\u80FD\u6CA1\u6709\r\n  const children = parseChildren(context)\r\n  if (context.source.startsWith('</')) { // <div></div>, \u8FD9\u79CD\u60C5\u51B5\u7684</div>\r\n    parseTag(context)\r\n  }\r\n  ele.loc = getSelection(context, ele.loc.start)\r\n  ele.children = children\r\n  return ele\r\n}\r\n\r\nexport function parse(template) {\r\n  // \u521B\u5EFA\u4E00\u4E2A\u89E3\u6790\u7684\u4E0A\u4E0B\u6587\r\n  const context = createParserContext(template)\r\n\r\n  const start = getCursor(context)\r\n\r\n  return createRoot(parseChildren(context), getSelection(context, start))\r\n}\r\n\r\nfunction createRoot(children, loc) {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    loc\r\n  }\r\n}\r\n\r\nfunction parseChildren(context) {\r\n  // <\u5F00\u5934\u662F\u5143\u7D20; {{}}\u662F\u8868\u8FBE\u5F0F; \u5176\u4ED6\u662F\u6587\u672C\r\n  let nodes = []\r\n  while (!isEnd(context)) {\r\n    const source = context.source\r\n    let node;\r\n    if (source.startsWith('{{')) {\r\n      node = parseInterpolation(context)\r\n    } else if (source[0] === '<') { // \u6807\u7B7E\r\n      node = parseElement(context)\r\n    }\r\n    if (!node) { // \u6587\u672C\r\n      node = parseText(context)\r\n    }\r\n    nodes.push(node)\r\n  }\r\n  nodes.forEach((node, i) => {\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n        nodes[i] = null\r\n      }\r\n    }\r\n  })\r\n  nodes = nodes.filter(Boolean)\r\n  return nodes\r\n}", "import { createObjectExpression, createVnodeCall, NodeTypes } from \"../ast\";\r\n\r\nexport function transformElement(node, context) {\r\n  // \u7ED9\u6240\u6709\u513F\u5B50\u5904\u7406\u5B8C\u540E \u7ED9\u5143\u7D20\u91CD\u65B0\u6DFB\u52A0children\u5C5E\u6027\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    return () => {\r\n      const vnodeTag = `\"${node.tag}\"`\r\n      const properties = []\r\n      const props = node.props\r\n      for (let i = 0; i < props.length; i++) {\r\n        properties.push({\r\n          key: props[i].name,\r\n          value: props[i].value.content\r\n        })\r\n      }\r\n      \r\n      const propsExpression = properties.length > 0 ? createObjectExpression(properties) : null\r\n      \r\n      let childrenNode = null\r\n      if (node.children.length === 1) {\r\n        childrenNode = node.children[0]\r\n      } else if (node.children.length > 1) {\r\n        childrenNode = node.children\r\n      }\r\n\r\n      // \u6DFB\u52A0 createElementVnode()\r\n      node.codegenNode = createVnodeCall(context, vnodeTag, propsExpression, childrenNode)\r\n\r\n    }\r\n  }\r\n}", "import { NodeTypes } from \"../ast\";\r\n\r\nexport function transformExpression(node, context) { // {{ aaa }} -> _ctx.aaa\r\n  if (node.type === NodeTypes.INTERPOLATION) {\r\n    let content = node.content.content\r\n    node.content.content = `_ctx.${content}`\r\n  }\r\n}", "export const isObject = (val) => {\r\n  return typeof val === 'object' && val !== null\r\n}\r\n\r\nexport const isString = (val) => {\r\n  return typeof val === 'string'\r\n}\r\n\r\nexport const isNumber = (val) => {\r\n  return typeof val === 'number'\r\n}\r\n\r\nexport const isFunction = (val) => {\r\n  return typeof val === 'function'\r\n}\r\n\r\nexport const isArray = Array.isArray\r\n\r\nexport const assign = Object.assign\r\n\r\nexport const enum ShapeFlags {\r\n  ELEMENT = 1,\r\n  FUNCTIONAL_COMPONENT = 1 << 1,\r\n  STATEFUL_COMPONENT = 1 << 2,\r\n  TEXT_CHILDREN = 1 << 3,\r\n  ARRAY_CHILDREN = 1 << 4,\r\n  SLOTS_CHILDREN = 1 << 5,\r\n  TELEPORT = 1 << 6,\r\n  SUSPENSE = 1 << 7,\r\n  COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8,\r\n  COMPONENT_KEPT_ALIVE = 1 << 9,\r\n  COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT\r\n}\r\n// & ShapeFlags.XXX, \u5982\u679C === 0, \u4E0D\u6EE1\u8DB3\u6761\u4EF6; >0, \u6EE1\u8DB3\u6761\u4EF6\r\n\r\n\r\nexport const enum PatchFlags {\r\n  TEXT = 1, // \u52A8\u6001\u6587\u672C\u8282\u70B9\r\n  CLASS = 1 << 1, // \u52A8\u6001class\r\n  STYLE = 1 << 2, // \u52A8\u6001style\r\n  PROPS = 1 << 3, // \u9664\u4E86class/style\u52A8\u6001\u5C5E\u6027\r\n  FULL_PROPS = 1 << 4, // \u6709key, \u9700\u8981\u5B8C\u6574diff\r\n  HYDRATE_EVENTS = 1 << 5, // \u6302\u8F7D\u8FC7\u4E8B\u4EF6\u7684\r\n  STABLE_FRAGMENT = 1 << 6, // \u7A33\u5B9A\u5E8F\u5217, \u5B50\u8282\u70B9\u987A\u5E8F\u4E0D\u4F1A\u53D1\u751F\u53D8\u5316\r\n  KEYED_FRAGMENT = 1 << 7, // \u5B50\u8282\u70B9\u6709key\u7684fragment\r\n  UNKEYED_FRAGMENT = 1 << 8, // \u5B50\u8282\u70B9\u6CA1\u6709key\u7684fragment\r\n  NEED_PATCH = 1 << 9, // \u8FDB\u884C\u975Eprops\u6BD4\u8F83, ref\u6BD4\u8F83\r\n  DYNAMIC_SLOTS = 1 << 10, // \u52A8\u6001\u63D2\u69FD\r\n  DEV_ROOT_FRAGMENT = 1 << 11,\r\n  HOISTED = -1, // \u8868\u793A\u9759\u6001\u8282\u70B9, \u5185\u5BB9\u53D8\u5316, \u4E0D\u6BD4\u8F83\u513F\u5B50\r\n  BAIL = -2, // \u8868\u793Adiff\u7B97\u6CD5\u5E94\u8BE5\u7ED3\u675F\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (value, key) => hasOwnProperty.call(value, key)\r\n\r\nexport const invokeArrayFns = (fns) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i]()\r\n  }\r\n}", "import { PatchFlags } from \"@vue/shared\";\r\nimport { createCallExpression, NodeTypes } from \"../ast\";\r\n\r\n\r\nexport function isText(node) {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\nexport function transformText(node, context) {\r\n  // \u9047\u5230\u5143\u7D20\u7684\u65F6\u5019 \u624D\u80FD\u5904\u7406\u591A\u4E2A\u5B50\u8282\u70B9\r\n  if (node.type === NodeTypes.ELEMENT || node.type === NodeTypes.ROOT) {\r\n    return () => {\r\n      // COMPOUND_EXPRESSION, // \u590D\u5408\u8868\u8FBE\u5F0F {{ aaa }} abc, 5 2, \u5373\u8868\u8FBE\u5F0F\u548C\u6587\u672C\r\n      let currentContainer = null\r\n      let children = node.children\r\n      let hasText = false\r\n      // <div> 123 {{ abc }} abc {{ ddd }}</div>\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]; // \u7B2C\u4E00\u4E2A\u5B69\u5B50\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = {\r\n                  type: NodeTypes.COMPOUND_EXPRESSION,\r\n                  children: [child]\r\n                }\r\n              }\r\n              currentContainer.children.push('+', next) // \u4E0B\u4E00\u4E2A\u8282\u70B9\u548C\u7B2C\u4E00\u4E2A\u8282\u70B9\u62FC\u63A5\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = null\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!hasText || children.length === 1) { // \u4E0D\u662F\u6587\u672C(\u5143\u7D20), \u6216\u662F\u6587\u672C\u4E14\u957F\u5EA6\u662F1, \u4E0D\u5904\u7406\r\n        return\r\n      }\r\n\r\n      // \u6DFB\u52A0patchFlag\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        const callArgs = []\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) { // \u90FD\u662F\u6587\u672C\r\n          callArgs.push(child)\r\n          if (node.type !== NodeTypes.TEXT) { // \u52A8\u6001\u8282\u70B9\r\n            callArgs.push(PatchFlags.TEXT) // \u4E3A\u4E86\u9776\u5411\u66F4\u65B0\r\n          }\r\n\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            codegenNode: createCallExpression(context, callArgs) // \u901A\u8FC7createTextVNode\u6765\u5B9E\u73B0\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n}", "import { createVnodeCall, NodeTypes } from \"./ast\"\r\nimport { CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, FRAGMENT, OPEN_BLOCK, TO_DISPLAY_STRING } from \"./runtimeHelpers\"\r\nimport { transformElement } from \"./transforms/transformElement\"\r\nimport { transformExpression } from \"./transforms/transformExpression\"\r\nimport { transformText } from \"./transforms/transformText\"\r\n\r\n\r\nfunction createTransformContext(root) {\r\n  const context = {\r\n    currentNode: root, // \u5F53\u524D\u6B63\u5728\u8F6C\u5316\u7684\u8282\u70B9\r\n    parent: null, // \u7236\u8282\u70B9\r\n    helpers: new Map(), // \u4F18\u5316, \u8D85\u8FC720\u4E2A\u76F8\u540C\u7684\u8282\u70B9\u4F1A\u88AB\u5B57\u7B26\u4E32\u5316\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    nodeTransforms: [\r\n      transformElement,\r\n      transformText,\r\n      transformExpression,\r\n    ]\r\n  }\r\n  return context\r\n}\r\n\r\nfunction traverse(node, context) {\r\n  context.currentNode = node\r\n  const nodeTransforms = context.nodeTransforms\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    onExit && exitFns.push(onExit)\r\n    if (!context.currentNode) { // \u5F53\u524D\u8282\u70B9\u88AB\u5220\u6389, \u5C31\u4E0D\u8003\u8651\u513F\u5B50\u4E86\r\n      return\r\n    }\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.INTERPOLATION:\r\n      context.helper(TO_DISPLAY_STRING)\r\n      break\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        context.parent = node\r\n        traverse(node.children[i], context)\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  context.currentNode = node // \u6267\u884C\u9000\u51FA\u51FD\u6570\u65F6currentNode\u6307\u5411\u4F9D\u65E7\u662F\u5BF9\u7684\r\n  let i = exitFns.length\r\n  while(i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createRootCodegen(ast, context) {\r\n  let { children } = ast\r\n  if (children.length === 1) { // \u53EA\u4E00\u4E2A\u8282\u70B9\r\n    const child = children[0]\r\n    if (child.type === NodeTypes.ELEMENT && child.codegenNode) { // \u5143\u7D20\r\n      ast.codegenNode = child.codegenNode // \u4E0D\u518D\u8C03\u7528createElementVnode\r\n      // \u8C03\u7528 openBlock createElementBlock\r\n      context.removeHelper(CREATE_ELEMENT_VNODE)\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(CREATE_ELEMENT_BLOCK)\r\n      ast.codegenNode.isBlock = true // \u53EA\u6709\u4E00\u4E2A\u5143\u7D20, \u90A3\u4E48\u5F53\u524D\u5143\u7D20\u53EA\u6709\u4E00\u4E2Ablock\u8282\u70B9\r\n    } else {\r\n      ast.codegenNode = child\r\n    }\r\n  } else {\r\n    if (children.length === 0) {\r\n      return\r\n    }\r\n    ast.codegenNode = createVnodeCall(context, context.helper(FRAGMENT), null, children)\r\n    context.helper(OPEN_BLOCK)\r\n    context.helper(CREATE_ELEMENT_BLOCK)\r\n    ast.codegenNode.isBlock = true\r\n  }\r\n}\r\n\r\n// \u5BF9\u6811\u8FDB\u884C\u904D\u5386\r\nexport function transform(ast) {\r\n  const context = createTransformContext(ast)\r\n\r\n  traverse(ast, context)\r\n\r\n  createRootCodegen(ast, context);\r\n  ast.helpers = [...context.helpers.keys()]\r\n}"],
  "mappings": "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",
  "names": []
}
